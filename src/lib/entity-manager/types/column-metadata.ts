import { MetadataType } from "./metadata-type";

export interface ColumnMetadata<ExtraData = Record<string, any>> {
	/**
	 * ----------------------------------------------
	 * When a new metadata is added, remember to also
	 * add at the const COLUMN_METADATA_KEYS
	 * ----------------------------------------------
	 */
	name: string;
	databaseName: string;
	isNameAlreadyFormatted?: boolean;

	type: MetadataType;

	isAutoGenerated?: boolean;
	autoGenerationType?: (...params: Array<any>) => Promise<any> | any;

	isArray?: boolean;

	primary?: boolean;

	extras?: ExtraData;
	/**
	 * ----------------------------------------------
	 * When a new metadata is added, remember to also
	 * add at the const COLUMN_METADATA_KEYS
	 * ----------------------------------------------
	 */
}

export const COLUMN_METADATA_KEYS: Array<keyof ColumnMetadata> = [
	"name",
	"databaseName",
	"type",
	"isNameAlreadyFormatted",
	"isAutoGenerated",
	"autoGenerationType",
	"isArray",
	"primary",
	"extras",
];
